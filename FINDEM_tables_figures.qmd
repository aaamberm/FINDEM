---
title: "Effectiveness of Ferritin‐guided Donation Intervals in Blood Donors: results of the Stepped Wedge Cluster‐randomized FIND’EM Trial"
format:
  html:
    code-fold: true
#    page-layout: full
    toc: true
    embed-resources: true
---

```{r, collapse=TRUE}
#| label: load-packages

library(tidyverse)       
library(haven)           # importing SPSS data files
library(furniture)       # nice tables of descriptives
library(corrplot)        # visualize correlations
library(ggplot2)         # plot making
library(GGally)          # extensions to ggplot2
library(sjlabelled)      # work with SPSS data
library(lubridate)       # dates
library(lme4)            # mixed models
library(table1)          # for producing t1
library(sjPlot)          # for model outputs
library(car)             # to calculate VIF
library(broom)           # for function augment
library(stringr)
library(reshape)
library(cli)
library(forestmangr)
library(cowplot)
library(ggpubr)
library(robustbase)      # robust regression

setwd("~/Amber/FINDEM") 
```

# Data

We load and clean the data and present a summary.

```{r, collapse = T}
#| label: process data
data_raw <- readRDS("~/Amber/Data/FINDEM/FINDEM_data.rds")
#clean data
data_clean <- data_raw%>% 
  mutate(HbDef = factor(case_when(HbGoedgekeurd == 0 ~ 1, HbGoedgekeurd == 1 ~ 0))) %>% 
  mutate(Gender = factor(Geslacht) %>% fct_recode("Male" = "Man", "Female" = "Vrouw")) %>% 
  mutate(Timepoint = case_when(Meetweek == 0 ~ as.Date('2017-11-01'), Meetweek == 1 ~ as.Date('2019-03-01'), Meetweek == 2 ~ as.Date('2019-11-01'), TRUE ~ as.Date('2020-11-23'))) %>% 
  mutate(Step = case_when(stap2 == 1.0 ~ as.Date('2017-11-01'), stap2 == 2.1 ~ as.Date('2018-05-01'), stap2 == 2.2~ as.Date('2018-10-01'), stap2 == 3.1 ~ as.Date('2019-03-01'), stap2 == 3.2 ~ as.Date('2019-10-01'), stap2 == 4.0 ~ as.Date('2019-11-01'))) %>% 
  mutate(Intervention_months = interval(Step, Timepoint) %/% months(1)) %>% 
  mutate(Intervention_months =  if_else(Intervention_months < 0, 0, Intervention_months)) %>% 
  mutate(Intervention = factor(case_when(Intervention_months == 0 ~ 0, TRUE & !is.na(Intervention_months)~ 1)))%>% 
  mutate(PostMeno = factor(case_when(Gender == "Female" & LeeftijdBijDOnatie < 45 ~ 0, Gender== "Female" & LeeftijdBijDOnatie >= 45 ~ 1))) %>%
  dplyr::rename(Ferritin = Ferritine_FINDEM, Age = LeeftijdBijDOnatie, Weight = Gewicht, Height = Lengte)  %>% 
  mutate(IronDef = factor(case_when(Ferritin >= 15 ~ 0, Ferritin < 15 ~ 1)))%>% 
  dplyr::select(-HbGoedgekeurd, -Geslacht)%>%
  mutate(Intervention_months2 =  if_else(Intervention_months < 6, 0, Intervention_months))%>%
  mutate(Intervention_months_factor = factor(case_when(Intervention_months == 0 ~ 0, Intervention_months == 1 ~ 0, Intervention_months == 5 ~ 0, Intervention_months == 8 ~ 1, Intervention_months == 10 ~ 1, Intervention_months == 12 ~ 2, Intervention_months == 13 ~ 2,Intervention_months == 16 ~ 2,Intervention_months == 18 ~ 3, Intervention_months == 20 ~ 3, Intervention_months == 24 ~ 4, Intervention_months == 25 ~ 4, Intervention_months == 30 ~ 5, Intervention_months == 36 ~ 6))) %>%
  mutate(COVID = factor(ifelse(Donatiedatum >= "2019-10-01" & Donatiedatum <= "2020-02-01", 1,0)))%>% mutate(Hb = Hb/0.6206)
summary(data_clean)

data_clean<-data_clean%>%mutate(Hb = replace(Hb, Hb == (999/0.6206), NA))%>%filter(!is.na(Cluster))

```

# Table 1

See section Descriptives of main FINDEM.html file.

# Table 2

See section Analysis \> Linear regression of main FINDEM.html file.

# Table 3

See section Analysis of FINDEM_questionnaire.html file.

# Table S1

See section Descriptives of FINDEM_questionnaire.html file.

# Table S2

For this sensitivity analysis, we need to scale the data:

```{r}
#| label: scaled dataset
data_scale <- data_clean
data_scale$Age <- scale(data_scale$Age, center=TRUE, scale = FALSE)
data_scale$Weight <- scale(data_scale$Weight, center=TRUE, scale = FALSE)
data_scale$Height <- scale(data_scale$Height, center=TRUE, scale = FALSE)
data_scale$FerritinLog10 <- log10(data_scale$Ferritin) 
```

For ferritin $\le$ 30:

```{r}
return_fitM_b30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height + COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male" & data_scale$Ferritin <= 30,family = binomial)
return_fit_preF_b30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0 & data_scale$Ferritin <= 30,family = binomial)
return_fit_postF_b30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height + COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1 & data_scale$Ferritin <= 30,family = binomial)

pl <- c(
  `(Intercept)` = "Intercept",
  Intervention_months_factor1 = "6-11 months",
  Intervention_months_factor2 = "12-17 months",
  Intervention_months_factor3 = "18-23 months",
  Intervention_months_factor4 = "24-29 months",
  Intervention_months_factor5 = "30-35 months",
  Intervention_months_factor6 = "36+ months"
)

tab_model(return_fit_preF_b30, return_fit_postF_b30, return_fitM_b30, pred.labels = pl, dv.labels = c("Pre-menopausal women", "Post-menopausal women", "Men"), show.reflvl = T, title = "Donor return (on time) for donors with ferritin below or equal to 30")
```

For ferritin \> 30:
```{r}
return_fitM_a30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male" & data_scale$Ferritin > 30,family = binomial)
return_fit_preF_a30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0 & data_scale$Ferritin > 30,family = binomial)
return_fit_postF_a30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1 & data_scale$Ferritin > 30,family = binomial)

pl <- c(
  `(Intercept)` = "Intercept",
  Intervention_months_factor1 = "6-11 months",
  Intervention_months_factor2 = "12-17 months",
  Intervention_months_factor3 = "18-23 months",
  Intervention_months_factor4 = "24-29 months",
  Intervention_months_factor5 = "30-35 months",
  Intervention_months_factor6 = "36+ months"
)

tab_model(return_fit_preF_a30, return_fit_postF_a30, return_fitM_a30, pred.labels = pl, dv.labels = c("Pre-menopausal women", "Post-menopausal women", "Men"), show.reflvl = T, title = "Donor return (on time) for donors with ferritin > 30")
```



# Table S3

We have conducted a sensitivity analysis on the donor return outcome, separating donors that were deferred based on Hb and donors that were deferred based on ferritin levels.

For donors that were deferred based on Hb levels: 

```{r}
return_fitM_HbDef <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male" & data_scale$HbDef == 1,family = binomial)
return_fit_preF_HbDef <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0 & data_scale$HbDef == 1,family = binomial)
return_fit_postF_HbDef <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1 & data_scale$HbDef == 1,family = binomial)

pl <- c(
  `(Intercept)` = "Intercept",
  Intervention_months_factor1 = "6-11 months",
  Intervention_months_factor2 = "12-17 months",
  Intervention_months_factor3 = "18-23 months",
  Intervention_months_factor4 = "24-29 months",
  Intervention_months_factor5 = "30-35 months",
  Intervention_months_factor6 = "36+ months"
)

tab_model(return_fit_preF_HbDef, return_fit_postF_HbDef, return_fitM_HbDef, pred.labels = pl, dv.labels = c("Pre-menopausal women", "Post-menopausal women", "Men"), show.reflvl = T, title = "Donor return (on time) for Hb deferred donors")
```

For donors that were deferred based on ferritin levels:

```{r}
return_fitM_b30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male" & data_scale$Ferritin <= 30,family = binomial)
return_fit_preF_b30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0 & data_scale$Ferritin <= 30,family = binomial)
return_fit_postF_b30 <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1 & data_scale$Ferritin <= 30,family = binomial)

pl <- c(
  `(Intercept)` = "Intercept",
  Intervention_months_factor1 = "6-11 months",
  Intervention_months_factor2 = "12-17 months",
  Intervention_months_factor3 = "18-23 months",
  Intervention_months_factor4 = "24-29 months",
  Intervention_months_factor5 = "30-35 months",
  Intervention_months_factor6 = "36+ months"
)

tab_model(return_fit_preF_b30, return_fit_postF_b30, return_fitM_b30, pred.labels = pl, dv.labels = c("Pre-menopausal women", "Post-menopausal women", "Men"), show.reflvl = T, title = "Donor return (on time) for donors whose donation intervals were extended")
```

# Table S4

We stratify the analysis of the donor return outcome by fixed vs. mobile donation locations. 

```{r, error=F, message=F, warning=F}
#we first need to find whether a location was done at a mobile location. We find this through linking our data to the donation database.
alldonations <- readRDS("~/Amber/Data/Algemeen/alledonaties_2008_2022.rds")
alldonations <- subset(alldonations, select = c("EINnummer", "Donatiecentrumcode"))
alldonations$EINnummer <- substr(alldonations$EINnummer,1,13)
data_scale2 <- merge(data_scale, alldonations, by.x = "Einnummer", by.y = "EINnummer", all.x = T)
data_scale2 <- data_scale2 %>% mutate(MAL = grepl("ML", Donatiecentrumcode.y)) %>% mutate(MAL = case_when(MAL == FALSE ~ 0,MAL == TRUE ~ 1 ))
```

For donors that donated in an fixed center:

```{r, error=F, message=F, warning=F}
return_fitM_AL <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale2, subset = data_scale2$Gender == "Male" & data_scale2$MAL ==0,family = binomial)
return_fit_preF_AL <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale2, subset = data_scale2$Gender == "Female" & data_scale2$PostMeno == 0 & data_scale2$MAL==0,family = binomial)
return_fit_postF_AL <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale2, subset = data_scale2$Gender == "Female" & data_scale2$PostMeno == 1 & data_scale2$MAL==0,family = binomial)

pl <- c(
  `(Intercept)` = "Intercept",
  Intervention_months_factor1 = "6-11 months",
  Intervention_months_factor2 = "12-17 months",
  Intervention_months_factor3 = "18-23 months",
  Intervention_months_factor4 = "24-29 months",
  Intervention_months_factor5 = "30-35 months",
  Intervention_months_factor6 = "36+ months"
)

tab_model(return_fit_preF_AL, return_fit_postF_AL, return_fitM_AL, pred.labels = pl, dv.labels = c("Pre-menopausal women", "Post-menopausal women", "Men"), show.reflvl = T, title = "Donor return (on time) for donors at an fixed location")
```

For donors that donated at a mobile location:

```{r}
return_fitM_MAL <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale2, subset = data_scale2$Gender == "Male" & data_scale2$MAL ==1,family = binomial)
return_fit_preF_MAL <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale2, subset = data_scale2$Gender == "Female" & data_scale2$PostMeno == 0 & data_scale2$MAL==1,family = binomial)
return_fit_postF_MAL <- glm(formula = ReturnOpTijd ~ Age + Weight + Height +COVID +  Intervention_months_factor, data = data_scale2, subset = data_scale2$Gender == "Female" & data_scale2$PostMeno == 1 & data_scale2$MAL==1,family = binomial)

pl <- c(
  `(Intercept)` = "Intercept",
  Intervention_months_factor1 = "6-11 months",
  Intervention_months_factor2 = "12-17 months",
  Intervention_months_factor3 = "18-23 months",
  Intervention_months_factor4 = "24-29 months",
  Intervention_months_factor5 = "30-35 months",
  Intervention_months_factor6 = "36+ months"
)

tab_model(return_fit_preF_MAL, return_fit_postF_MAL, return_fitM_MAL, pred.labels = pl, dv.labels = c("Pre-menopausal women", "Post-menopausal women", "Men"), show.reflvl = T, title = "Donor return (on time) for donors at a mobile location")
```
# Table S5

To give a clear overview of the differences between the pre- and post-implementation situation in the donation centers, we present the following table. To compare pre- and post-implementation completely, one could compare week 0 and 3.

```{r}
data_ts5 <- data_clean 

```

```{r}
SupTable3<-table1::table1(~ Age + Hb + Ferritin + Height + Weight + factor(IronDef) + factor(HbDef) + factor(ReturnOpTijd) | factor(Meetweek), data = subset(data_ts5, (data_ts5$Meetweek==0 | data_ts5$Meetweek == 3) & data_ts5$Gender=="Female" & data_ts5$PostMeno==0), caption = "Premenopausal females", render.continuous=c(.="Mean (SD)", .="Median [Q1, Q3]"), render.categorical=c(.="FREQ (PCT)"), overall=F)
SupTable3
```
```{r}
SupTable3<-table1::table1(~  Age + Hb + Ferritin + Height + Weight + factor(IronDef) + factor(HbDef) + factor(ReturnOpTijd) | factor(Meetweek), data = subset(data_ts5, (data_ts5$Meetweek==0 | data_ts5$Meetweek == 3) & data_ts5$Gender=="Female" & data_ts5$PostMeno==1), caption = "Postmenopausal females", render.continuous=c(.="Mean (SD)", .="Median [Q1, Q3]"), render.categorical=c(.="FREQ (PCT)"), overall=F)
SupTable3
```
```{r}
SupTable3<-table1::table1(~ Age + Hb + Ferritin + Height + Weight + factor(IronDef) + factor(HbDef) + factor(ReturnOpTijd)  | factor(Meetweek), data = subset(data_ts5, (data_ts5$Meetweek==0 | data_ts5$Meetweek == 3) & data_ts5$Gender=="Male"), caption = "Males", render.continuous=c(.="Mean (SD)", .="Median [Q1, Q3]"), render.categorical=c(.="FREQ (PCT)"), overall=F)
SupTable3
```

# Figure 1

Figure 1 was produced in Microsoft Powerpoint.

# Figure 2

```{r, warnings=F, errors=F, messages=F}
data_clean$LowFerr <- 0
data_clean$LowFerr[data_clean$Ferritin>=15 & data_clean$Ferritin < 30] <- 1

figure2M <- data.frame(matrix(NA,    # Create empty data frame
                          nrow = 7, # we make a dataset per sex and then have one row per month group of the intervention
                          ncol = 7)) #we need columns for the percentage hb deferral, iron deficiency and low ferritin
colnames(figure2M) <- c("Months", "Hb", "Hb_se", "ID","ID_se", "LowFer","LowFer_se")
figure2M$Months <- c("Control", "6-11", "12-17", "18-23", "24-29", "30-35", "36+")

figure2PreF <- data.frame(matrix(NA,    # Create empty data frame
                          nrow = 7, # we make a dataset per sex and then have one row per month group of the intervention
                          ncol = 7)) #we need columns for the percentage hb deferral, iron deficiency and low ferritin
colnames(figure2PreF) <- c("Months", "Hb", "Hb_se", "ID","ID_se", "LowFer","LowFer_se")
figure2PreF$Months <- c("Control", "6-11", "12-17", "18-23", "24-29", "30-35", "36+")

figure2PostF <- data.frame(matrix(NA,    # Create empty data frame
                          nrow = 7, # we make a dataset per sex and then have one row per month group of the intervention
                          ncol = 7)) #we need columns for the percentage hb deferral, iron deficiency and low ferritin
colnames(figure2PostF) <- c("Months", "Hb", "Hb_se", "ID","ID_se", "LowFer","LowFer_se")
figure2PostF$Months <- c("Control", "6-11", "12-17", "18-23", "24-29", "30-35", "36+")

for (i in 1:7){
  figure2M[i,2] <- (length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1) & data_clean$HbDef==1))/length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1))))*100
  figure2M[i,3] <- sqrt(((figure2M[i,2]/100)*(1 - (figure2M[i,2]/100)))/length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1))))
  figure2M[i,4] <- (length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1) & data_clean$IronDef==1))/length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1))))*100
    figure2M[i,5] <- sqrt(((figure2M[i,4]/100)*(1 - (figure2M[i,4]/100)))/length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1))))
    figure2M[i,6] <- (length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1) & data_clean$LowFerr ==1))/length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1))))*100
      figure2M[i,7] <- sqrt(((figure2M[i,6]/100)*(1 - (figure2M[i,6]/100)))/length(which(data_clean$Gender == "Male" & data_clean$Intervention_months_factor == (i-1))))
    
    mdat = melt(figure2M, id.vars=c("Months"),
            measure.vars=c("ID", "LowFer"))
    mdat$Months <- factor(mdat$Months, levels = c("Control", "6-11", "12-17", "18-23", "24-29", "30-35", "36+"))
    mdat$se[1:7] <- figure2M[,5] 
    mdat$se[8:14] <- figure2M[,7]
    mdat$Sex <- "Males"
    mdat <- merge(mdat, figure2M[,1:3], by = "Months")
    mdat[c(2,4,6,8,10,12,14),6:7]<-NA
    
    
      figure2PreF[i,2] <- (length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1) & data_clean$HbDef==1))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1))))*100
      figure2PreF[i,3] <- sqrt(((figure2PreF[i,2]/100)*(1 - (figure2PreF[i,2]/100)))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1))))
  figure2PreF[i,4] <- (length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1) & data_clean$IronDef==1))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1))))*100
  figure2PreF[i,5] <- sqrt(((figure2PreF[i,4]/100)*(1 - (figure2PreF[i,4]/100)))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1))))
    figure2PreF[i,6] <- (length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1) & data_clean$LowFerr ==1))/length(which(data_clean$Gender == "Female" &  data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1))))*100
    figure2PreF[i,7] <- sqrt(((figure2PreF[i,6]/100)*(1 - (figure2PreF[i,6]/100)))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 0 & data_clean$Intervention_months_factor == (i-1))))
    
    mdatPreF = melt(figure2PreF, id.vars=c("Months"),
            measure.vars=c("ID", "LowFer"))
    mdatPreF$Months <- factor(mdatPreF$Months, levels = c("Control", "6-11", "12-17", "18-23", "24-29", "30-35", "36+"))
    mdatPreF$se[1:7] <- figure2PreF[,5] 
    mdatPreF$se[8:14] <- figure2PreF[,7]
    mdatPreF$Sex <- "Premenopausal females"
    mdatPreF <- merge(mdatPreF, figure2PreF[,1:3], by = "Months")
    mdatPreF[c(2,4,6,8,10,12,14),6:7]<-NA
    
      figure2PostF[i,2] <- (length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1) & data_clean$HbDef==1))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1))))*100
      figure2PostF[i,3] <- sqrt(((figure2PostF[i,2]/100)*(1 - (figure2PostF[i,2]/100)))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1))))
  figure2PostF[i,4] <- (length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1) & data_clean$IronDef==1))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1))))*100
  figure2PostF[i,5] <- sqrt(((figure2PostF[i,4]/100)*(1 - (figure2PostF[i,4]/100)))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1))))
    figure2PostF[i,6] <- (length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1) & data_clean$LowFerr ==1))/length(which(data_clean$Gender == "Female" &  data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1))))*100
    figure2PostF[i,7] <- sqrt(((figure2PostF[i,6]/100)*(1 - (figure2PostF[i,6]/100)))/length(which(data_clean$Gender == "Female" & data_clean$PostMeno == 1 & data_clean$Intervention_months_factor == (i-1))))
    
    mdatPostF = melt(figure2PostF, id.vars=c("Months"),
            measure.vars=c("ID", "LowFer"))
    mdatPostF$Months <- factor(mdatPostF$Months, levels = c("Control", "6-11", "12-17", "18-23", "24-29", "30-35", "36+"))
    mdatPostF$se[1:7] <- figure2PostF[,5] 
    mdatPostF$se[8:14] <- figure2PostF[,7]
    mdatPostF$Sex <- "Postmenopausal females"
    mdatPostF <- merge(mdatPostF, figure2PostF[,1:3], by = "Months")
    mdatPostF[c(2,4,6,8,10,12,14),6:7]<-NA

}

mdat_total <- rbind(mdat, mdatPreF, mdatPostF)
```

```{r, warning=FALSE, error=FALSE, message=FALSE}
#| label: make figures

# Function to scale secondary axis
# Function to scale secondary axis
scale_function <- function(x, scale, shift){
  return ((x)*scale - shift)
}

# Function to scale secondary variable values
inv_scale_function <- function(x, scale, shift){
  return ((x + shift)/scale)
}

sex <- c("Males", "Premenopausal females", "Postmenopausal females")

for(i in sex){
max_first  <- max(mdat_total$value)+20   # Specify max of first y axis
max_second <- max(mdat_total$Hb, na.rm=T) # Specify max of second y axis
min_first  <- min(mdat_total$value)+20   # Specify min of first y axis
min_second <- min(mdat_total$Hb, na.rm=T) # Specify min of second y axis

# scale and shift variables calculated based on desired mins and maxes
scale = max_second/max_first
shift = 0 #min_first - min_second

plot<- ggplot(data=mdat_total[mdat_total$Sex==i,], aes(x=Months, fill=variable))+
  geom_bar(aes(x=Months, y=value, fill = variable), stat="identity", position = position_dodge(), width=0.4)+
  geom_bar(aes(x=Months, y=inv_scale_function(Hb, scale, shift)), stat = "identity", width = 0.2,position = position_nudge(x = 0.35), col = "lightgrey", fill = "lightgrey")+
  xlab("Time since implementation (months)")+
  ylab("Percentage")+
  geom_errorbar(aes(x=Months, ymin=value-(1.96*(se*100)), ymax=value+(1.96*(se*100))), width = 0.2, position=position_dodge(.4))+
  geom_errorbar(aes(x=Months, ymin=inv_scale_function((Hb-(1.96*(Hb_se*100))),scale,shift), ymax=inv_scale_function((Hb+(1.96*(Hb_se*100))),scale, shift), width = 0.1), position = position_nudge(x = 0.35), col = "darkgrey")+
  scale_y_continuous(name = "Donors with low ferritin (%)", sec.axis = sec_axis(~scale_function(., scale, shift), name="Donors deferred based on Hb (%)"))+ 
  theme(axis.title.y = element_text(color = "black", size=10),
        axis.title.y.right = element_text(color = "darkgrey", size=10))
  ggtitle(paste0(i))
print(plot)
}

for(i in sex){
plot<- ggplot(data=mdat_total[mdat_total$Sex==i,], aes(x=Months, fill=variable))+
  geom_bar(aes(x=Months, y=value, fill = variable), stat="identity", position = position_dodge(), width=0.7)+
  xlab("Time since implementation (months)")+
  ylab("Percentage")+
  geom_errorbar(aes(x=Months, ymin=value-(1.96*(se*100)), ymax=value+(1.96*(se*100))), width = 0.35, position=position_dodge(.7))+
  ggtitle(paste0(i))
print(plot)
}
```

```{r, warning=F, message=F}
pos <- position_dodge(.5)
order <- c("Premenopausal females", "Postmenopausal females", "Males")
mdat_total <- mdat_total %>% mutate(Sex = ordered(Sex, levels = order))
plot <- ggplot(data=mdat_total) + 
  geom_bar(aes(x=Months, y=value, fill = variable), stat="identity", width = 0.5, position = pos) +
  geom_errorbar(aes(x=Months, ymin=value-(1.96*(se*100)), ymax=value+(1.96*(se*100)), group = variable), width = 0.35, position=pos)+
  geom_bar(aes(x=Months, y=inv_scale_function(Hb, scale, shift), color = "grey"), stat = "identity", position = position_nudge(x = 0.35), width = 0.20, fill = "grey") +
  geom_errorbar(aes(x=Months, ymin=inv_scale_function((Hb-(1.96*(Hb_se*100))),scale,shift), ymax=inv_scale_function((Hb+(1.96*(Hb_se*100))),scale, shift), width = 0.2), position = position_nudge(x = 0.35), col = "grey36")+
  scale_fill_manual(values = c("ID" = "#ff9700", "LowFer"= "#1cdbfc"), labels = c("Iron deficient (<15 ng/mL)", "Low (15-30 ng/mL)"), name="Ferritin")+
  xlab("Time since implementation (months)")+ 
  ylab("Percentage")+
  scale_color_manual(values = c("grey" = "grey"), labels = c("Hb < 12.5/13.5 g/dL (F/M)"), name="Deferral")+
  ggtitle("Donors presenting with low ferritin and hemoglobin")+
  scale_y_continuous(name = "Donors with low ferritin (%)", sec.axis = sec_axis(~scale_function(., scale, shift), name="Donors deferred based on Hb (%)"))+ 
  theme(axis.title.y = element_text(color = "black", size=10),
        axis.title.y.right = element_text(color = "black", size=10))+
  facet_grid(.~ Sex) + 
  theme(panel.background = element_rect(fill = "white",
                                    colour = "white",
                                    size = 0.5, linetype = "solid"),
    panel.grid.major = element_line(size = 0.5, linetype = 'solid',
                                    colour = "#ededed"), 
    panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
                                    colour = "#ededed"))

ggsave(plot, width = 12, height = 5, file = "~/Amber/FINDEM/figure2.jpg")

```

# Forest plot primary outcomes

Load all models:
```{r}
#| label: forest plot

hb_fit_M <- lm(Hb ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male")
hb_fit_preF <- lm(Hb ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0)
hb_fit_postF <- lm(Hb ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1)

ferritin_fit_M <- lm(FerritinLog10 ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male")
ferritin_fit_preF <- lm(FerritinLog10 ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0)
ferritin_fit_postF <- lm(FerritinLog10 ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1)

hbdef_fit_M <- glm(formula = HbDef ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male" ,family = binomial)
hbdef_fit_preF <- glm(formula = HbDef ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0,family = binomial)
hbdef_fit_postF <- glm(formula = HbDef ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1,family = binomial)

ID_fit_M <- glm(formula = IronDef ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male" ,family = binomial)
ID_fit_preF <- glm(formula = IronDef ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0,family = binomial)
ID_fit_postF <- glm(formula = IronDef ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1,family = binomial)

returnOT_fit_M <- glm(formula = ReturnOpTijd ~ Age + Weight + Height + COVID + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male",family = binomial)
returnOT_fit_preF <- glm(formula = ReturnOpTijd ~ Age + Weight + Height + COVID + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0,family = binomial)
returnOT_fit_postF <- glm(formula = ReturnOpTijd ~ Age + Weight + Height + COVID + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1,family = binomial)

models <- ls()
models <- models[grepl("fit", models)]

load_models <- function(model){
  info <- str_split(model, "_", simplify=T)
  if(grepl("hbdef", model)){coef <- tidy(get(model), conf.int=T, exponentiate=T)
  } else if  (grepl("ID", model)){coef <- tidy(get(model), conf.int=T, exponentiate=T)
  } else if (grepl("return", model)){coef <- tidy(get(model), conf.int=T, exponentiate=T)} else {coef <- tidy(get(model), conf.int=T)}
  coef <- coef %>% mutate(outcome = info[1], sex = info[3]) %>% filter(grepl("Intervention", term))
}

order <- rev(c("Intervention_months_factor1", "Intervention_months_factor2", "Intervention_months_factor3", "Intervention_months_factor4", "Intervention_months_factor5", "Intervention_months_factor6"))

datalist <- lapply(models, load_models)
data.forestplot <- bind_rows(datalist) %>% mutate(term = ordered(term, levels = order)) %>% mutate(sex = dplyr::recode(sex, "M" = "Males", "postF" = "Postmenopausal females", "preF" = "Premenopausal females"), sex = ordered(sex, levels = c("Premenopausal females", "Postmenopausal females", "Males")), outcome = dplyr::recode(outcome, "ferritin" = "Ferritin", "hb" = "Hemoglobin", "hbdef" = "Hb based \ndeferral", "ID" = "Iron \ndeficiency", "returnOT" = "Return"),  significant = as.factor(ifelse(p.value <= (0.05/6), 1, 0)), significant = ordered(significant, levels = c("1", "0")))

p1 <- ggplot(data.forestplot[data.forestplot$outcome=="Ferritin" | data.forestplot$outcome == "Hemoglobin",], aes(x=term, y=estimate, shape = significant)) +
         geom_errorbar(aes(ymin=conf.low, ymax=conf.high), 
                       width = 0.2,size  = 0.5,
                       position = "dodge", color="#1cdbfc") +
  geom_hline(yintercept = 0, color = "#ff9700", linewidth = 0.35) +
  scale_shape_manual(values = c(16, 1)) + 
  ylim(-0.1,0.5) +
  geom_point() + coord_flip() + scale_x_discrete(breaks = c("Intervention_months_factor1", "Intervention_months_factor2", "Intervention_months_factor3", "Intervention_months_factor4", "Intervention_months_factor5", "Intervention_months_factor6"),
                           labels = c("6-11", "12-17", "18-23", "24-29", "30-35", "36+")) + ylab("Regression coefficient") + facet_grid(outcome~sex) + theme(legend.position = "none",axis.title.y=element_blank())

p2 <- ggplot(data.forestplot[data.forestplot$outcome=="Iron \ndeficiency" | data.forestplot$outcome == "Hb based \ndeferral" | data.forestplot$outcome == "Return",], aes(x=term, y=estimate, shape = significant)) +
         geom_errorbar(aes(ymin=conf.low, ymax=conf.high), 
                       width = 0.2,size  = 0.5,
                       position = "dodge", color="#1cdbfc") +
  geom_hline(yintercept = 1, color = "#ff9700", linewidth = 0.35) +
  scale_shape_manual(values = c(16, 1), name = "Statistical \nsignificance \n(p<0.008)        ", labels = c("Yes", "No")) +
  geom_point() + coord_flip() + scale_x_discrete(breaks = c("Intervention_months_factor1", "Intervention_months_factor2", "Intervention_months_factor3", "Intervention_months_factor4", "Intervention_months_factor5", "Intervention_months_factor6"),
                           labels = c("6-11", "12-17", "18-23", "24-29", "30-35", "36+")) + ylab("Odds ratio")  + facet_grid(outcome~sex) + theme(legend.key.size = unit(0.5, 'cm'), #change legend key size
        legend.key.height = unit(0.5, 'cm'), #change legend key height
        legend.key.width = unit(0.5, 'cm'), legend.position = "bottom", axis.title.y = element_blank(), legend.title=element_text(size=7), legend.text=element_text(size=7)) #change legend key width



figure <- plot_grid(p1, p2, align = "v", nrow = 2, rel_heights = c(2/5, 3/5))
annotate_figure <- annotate_figure(figure,
                top = text_grob("Associations of implementation of ferritin-guided donation \nintervals with primary study outcomes", color = "black", size = 14),
                bottom = text_grob("Ferritin: log10 ng/mL; Hb: g/dL; Iron deficiency: ferritin < 15 ng/mL; Hb deferral: males < 13.5 g/dL, females < 12.5 g/dL; Return: within 6 months of first allowed date. \nReference group: no implementation and 0-5 months since implementation. \nAll analyses are adjusted for age, height and weight. \nReturn is additionally adjusted for whether return would be during first COVID lockdown (March-May 2020). \nStatistical significance: Bonferroni correction applied to adjust for multiple testing (0.05/6).", color = "black",
                                   hjust = 0, x = 0, size = 5),
                left = text_grob("Time after intervention (months)", color = "black", rot = 90, vjust=1, x=0.1)
                )
ggsave(annotate_figure, file = "forestplot.jpg", width = 7, height = 7)
```

# Forest plot secondary outcomes
Load data:
```{r}
#| label: load questionnaire data

data_clean <- read_sav("~/Amber/Data/FINDEM/Final_survey.sav") 
data_clean <- data_clean %>% dplyr::select(-Einnummer, -Cluster, -Date, -Timepoint, -Meetweek) %>% 
  mutate(Gender = factor(Gender) %>% fct_recode("Male" = "1", "Female" = "2")) %>%
  mutate(PICA = factor(PICA) %>% fct_recode("Yes" = "1", "No" = "0")) %>% 
  mutate(RLS = factor(case_when(RLS == 2 ~ 1, RLS == 1 ~ 0)) %>% fct_recode("Yes" = "1", "No" = "0")) %>% 
  mutate(Intervention_months_factor = factor(case_when(Intervention_months_s < 6 ~ 0, Intervention_months_s >= 6 & Intervention_months_s <12 ~ 1, Intervention_months_s >= 12 & Intervention_months_s < 18 ~ 2, Intervention_months_s >= 18  & Intervention_months_s < 24 ~ 3,Intervention_months_s >= 24 ~ 4))) %>% 
  mutate(Fergroup = factor(case_when(Ferritin < 15 ~ 1, Ferritin >= 15 & Ferritin <= 30~ 2, Ferritin > 30 ~ 3)) %>%  fct_recode("Ferritin < 15" = "1", "Ferritin 15-30" = "2", "Ferritin > 30" = "3")) %>% 
  mutate(Warmglow = as.numeric(Warmglow))  %>% mutate(Warmglow = as.factor(case_when(Warmglow >=6 ~ 1, TRUE & !is.na(Warmglow) ~ 0)) %>% fct_recode("Yes" = "1", "No" = "0"))

data_scale <- data_clean
data_scale$Age <- scale(data_scale$Age, center=TRUE, scale = FALSE)
data_scale$Weight <- scale(data_scale$Weight, center=TRUE, scale = FALSE)
data_scale$Height <- scale(data_scale$Height, center=TRUE, scale = FALSE)
```

Load models:
```{r}
PICA_fitQ_M <- glm(formula = PICA ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male" ,family = binomial)
PICA_fitQ_preF <- glm(formula = PICA ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0 ,family = binomial)
PICA_fitQ_postF <- glm(formula = PICA ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1 ,family = binomial)

RLS_fitQ_M <- glm(formula = RLS ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male" ,family = binomial)
RLS_fitQ_preF <- glm(formula = RLS ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0 ,family = binomial)
RLS_fitQ_postF <- glm(formula = RLS ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1 ,family = binomial)

CFQ_fitQ_preF<- lmrob(CFQ_Total ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0)
CFQ_fitQ_postF <- lmrob(CFQ_Total ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1)
CFQ_fitQ_M <- lmrob(CFQ_Total ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male")

SFph_fitQ_preF <- lmrob(SF_ph ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset  = data_scale$Gender == "Female" & data_scale$PostMeno == 0)
SFph_fitQ_postF <- lmrob(SF_ph ~ Age + Weight + Height + Intervention_months_factor, data = data_scale,  subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1)
SFph_fitQ_M <- lmrob(SF_ph ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male")

SFmh_fitQ_preF <- lmrob(SF_mh ~ Age + Weight + Height + Intervention_months_factor , data = data_scale, subset  = data_scale$Gender == "Female" & data_scale$PostMeno == 0)
SFmh_fitQ_postF <- lmrob(SF_mh ~ Age + Weight + Height + Intervention_months_factor , data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1)
SFmh_fitQ_M <- lmrob(SF_mh ~ Age + Weight + Height + Intervention_months_factor, data = data_scale, subset = data_scale$Gender == "Male")

WG_fitQ_preF <- glm(Warmglow ~ Age + Weight + Height + Intervention_months_factor , data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 0,family = binomial)
WG_fitQ_postF <- glm(Warmglow ~ Age + Weight + Height + Intervention_months_factor , data = data_scale, subset = data_scale$Gender == "Female" & data_scale$PostMeno == 1,family = binomial)
WG_fitQ_M <- glm(Warmglow ~ Age + Weight + Height + Intervention_months_factor , data = data_scale, subset = data_scale$Gender == "Male" ,family = binomial)

CIS_fitQ_preF <- lmrob(CIS_Totalmean ~ Age + Weight + Height + Intervention_months_factor , data = data_scale, subset  = data_scale$Gender == "Female" & data_scale$PostMeno == 0)
CIS_fitQ_postF <- lmrob(CIS_Totalmean ~ Age + Weight + Height + Intervention_months_factor , data = data_scale, subset  = data_scale$Gender == "Female" & data_scale$PostMeno == 1)
CIS_fitQ_M <- lmrob(CIS_Totalmean ~ Age + Weight + Height + Intervention_months_factor , data = data_scale, subset  = data_scale$Gender == "Male")

modelsQ <- ls()
modelsQ <- modelsQ[grepl("fitQ", modelsQ)]

load_models_Q <- function(model){
  info <- str_split(model, "_", simplify=T)
  if(grepl("WG", model)){coef <- tidy(get(model), conf.int=T, exponentiate=T)
  } else if  (grepl("RLS", model)){coef <- tidy(get(model), conf.int=T, exponentiate=T)
  } else if (grepl("PICA", model)){coef <- tidy(get(model), conf.int=T, exponentiate=T)} else {coef <- tidy(get(model), conf.int=T)}
  coef <- coef %>% mutate(outcome = info[1], sex = info[3]) %>% filter(grepl("Intervention", term))
}

order <- rev(c("Intervention_months_factor1", "Intervention_months_factor2", "Intervention_months_factor3", "Intervention_months_factor4"))

datalist <- lapply(modelsQ, load_models_Q)
data.forestplot <- bind_rows(datalist) %>% mutate(term = ordered(term, levels = order)) %>% mutate(sex = dplyr::recode(sex, "M" = "Male", "postF" = "Postmenopausal females", "preF" = "Premenopausal females"), outcome = dplyr::recode(outcome, "WG" = "Warm\nglow", "PICA" = "Pica", "RLS" = "Restless \nlegs syn-\ndrome", "CFQ" = "Cognitive \nfuncti- \noning", "CIS" = "Fatigue", "SFph" = "Physical \nhealth", "SFmh"="Mental\nhealth"),  significant = as.factor(ifelse(p.value <= (0.05/4), 1, 0)), significant = ordered(significant, levels = c("1", "0")))

p1Q <- ggplot(data.forestplot[data.forestplot$outcome=="Cognitive \nfuncti- \noning" | data.forestplot$outcome == "Fatigue" | data.forestplot$outcome == "Physical \nhealth" | data.forestplot$outcome=="Mental\nhealth",], aes(x=term, y=estimate, shape = significant)) +
         geom_errorbar(aes(ymin=conf.low, ymax=conf.high), 
                       width = 0.2,size  = 0.5,
                       position = "dodge", color="#1cdbfc") +
  geom_hline(yintercept = 0, color = "#ff9700", linewidth = 0.35) +
  scale_shape_manual(values = c(1, 16)) +
  geom_point() + coord_flip() + scale_x_discrete(breaks = c("Intervention_months_factor1", "Intervention_months_factor2", "Intervention_months_factor3", "Intervention_months_factor4"),
                           labels = c("6-11", "12-17", "18-23", "24-29")) + ylab("Regression coefficient") + facet_grid(outcome~sex) + theme(legend.position = "none",axis.title.y=element_blank())

p2Q <- ggplot(data.forestplot[data.forestplot$outcome=="Warm\nglow" | data.forestplot$outcome == "Restless \nlegs syn-\ndrome" | data.forestplot$outcome == "Pica",], aes(x=term, y=estimate, shape = significant)) +
         geom_errorbar(aes(ymin=conf.low, ymax=conf.high), 
                       width = 0.2,size  = 0.5,
                       position = "dodge", color="#1cdbfc") +
  geom_hline(yintercept = 1, color = "#ff9700", linewidth = 0.35) +
  scale_shape_manual(values = c(16, 1), name = "Statistical \nsignificance \n(p<0.013)        ", labels = c("Yes", "No")) +
  geom_point() + coord_flip() + scale_x_discrete(breaks = c("Intervention_months_factor1", "Intervention_months_factor2", "Intervention_months_factor3", "Intervention_months_factor4"),
                           labels = c("6-11", "12-17", "18-23", "24-29")) + ylab("Odds ratio")  + facet_grid(outcome~sex) + theme(legend.key.size = unit(0.5, 'cm'), #change legend key size
        legend.key.height = unit(0.5, 'cm'), #change legend key height
        legend.key.width = unit(0.5, 'cm'), legend.position = "bottom", axis.title.y = element_blank(), legend.title=element_text(size=7), legend.text=element_text(size=7)) #change legend key width



figure <- plot_grid(p1Q, p2Q, align = "v", nrow = 2, rel_heights = c(4/7, 3/7))
annotate_figureQ <- annotate_figure(figure,
                top = text_grob("Associations of implementation of ferritin-guided donation \nintervals with secondary study outcomes", color = "black", size = 14),
                bottom = text_grob("Statistical significance: Bonferroni correction applied to adjust for multiple testing (0.05/4). \nCognitive functioning: higher score indicates worse result. \nPhysical & mental health: higher score indicates better result.", color = "black",
                                   hjust = 0, x = 0, size = 5),
                left = text_grob("Time after intervention (months)", color = "black", rot = 90, vjust=1, x=0.1)
                )
ggsave(annotate_figureQ, file = "forestplot_Q.jpg", width = 7, height = 8.5)
```

# Combined forest plot

```{r}
figure <- plot_grid(p1Q, p2Q, align = "v", nrow = 2, rel_heights = c(4/7, 3/7))
annotate_figureQ <- annotate_figure(figure,
                top = text_grob("Associations of implementation of ferritin-guided donation \nintervals with secondary study outcomes", color = "black", size = 14),
                bottom = text_grob("Statistical significance: Bonferroni correction applied to adjust for multiple testing (0.05/6). \nCognitive functioning: higher score indicates worse result. \nPhysical & mental health: higher score indicates better result. \n \n", color = "black",
                                   hjust = 0, x = 0, size = 5)
                )

final_figure <- plot_grid(annotate_figure, annotate_figureQ, align = "h", ncol = 2, rel_widths =c(1/2, 1/2), labels = "AUTO")
ggsave(final_figure, file = "forestplot_final.jpg", width = 14, height = 8.5)
```